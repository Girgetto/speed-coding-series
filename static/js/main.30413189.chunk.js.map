{"version":3,"sources":["components/Calculator/utils/index.js","components/Home/index.js","components/Calculator/components/DataCell.js","components/Calculator/components/Row.js","components/Calculator/index.js","components/ToDoList/index.js","Routes.js","reportWebVitals.js","index.js"],"names":["calculatorsButtons","initialState","expression","result","invalidInputs","reducer","state","action","some","el","eval","Home","className","to","DataCell","rowElements","dispatch","map","e","i","colSpan","onClick","DataRow","renderDataCell","renderRows","Row","renderHeaderRow","Index","useReducer","cellSpacing","cellPadding","ToDoList","useState","list","setList","List","task","style","textDecorationLine","isDone","description","type","onChange","taskToChange","listModified","_id","handleClickIsDone","checked","taskToRemove","filter","handleClickRemove","placeholder","onKeyDown","event","key","target","value","Date","valueOf","Routes","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30413189.chunk.js","sourcesContent":["export const calculatorsButtons = [\n  [\"DEL\", \"+/-\", \"%\", \"/\"],\n  [\"7\", \"8\", \"9\", \"*\"],\n  [\"4\", \"5\", \"6\", \"-\"],\n  [\"1\", \"2\", \"3\", \"+\"],\n  [\"0\", \",\", \"=\"],\n];\n\nexport const initialState = { expression: \"\", result: 0 };\n\nconst invalidInputs = [\"DEL\", \"+/-\", \"%\", \"/\", \"*\", \"-\", \"+\", \"\"];\n\nexport const reducer = (state, action) => {\n  switch (action) {\n    case \"=\":\n      if (invalidInputs.some((el) => state.expression === el))\n        return { result: 0, expression: \"\" };\n      // eslint-disable-next-line no-eval\n      return { expression: \"\", result: eval(state.expression) };\n    case \"DEL\":\n      return { result: 0, expression: \"\" };\n    default:\n      return { result: 0, expression: state.expression + action };\n  }\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className=\"routes-list\">\n      <Link to=\"/calculator\">Calculator</Link>\n      <Link to=\"/to-do\">To Do List</Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst DataCell = (rowElements, dispatch) => {\n  return rowElements.map((e, i) => (\n    <td\n      key={i}\n      colSpan={e !== \"=\" ? 1 : 2}\n      onClick={() => {\n        dispatch(e);\n      }}\n    >\n      {e}\n    </td>\n  ));\n};\n\nexport default DataCell;\n","import React from \"react\";\n\nimport renderDataCell from \"./DataCell\";\n\nconst DataRow = ({ rowElements, i, dispatch }) => (\n  <tr key={i}>{renderDataCell(rowElements, dispatch)}</tr>\n);\n\nexport default DataRow;\n","import React, { useReducer } from \"react\";\n\nimport Row from \"./components/Row\";\nimport { calculatorsButtons, initialState, reducer } from \"./utils\";\nimport \"./index.css\";\n\nconst renderRows = (dispatch) =>\n  calculatorsButtons.map((e, i) => (\n    <Row rowElements={calculatorsButtons[i]} key={i} dispatch={dispatch} />\n  ));\n\nconst renderHeaderRow = (state) => (\n  <tr>\n    <th colSpan=\"4\">\n      <p className=\"expression\">\n        {state.expression !== \"\" ? state.expression : \"0\"}\n      </p>\n      <p className=\"result\">{state.result}</p>\n    </th>\n  </tr>\n);\n\nconst Index = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <table cellSpacing=\"0\" cellPadding=\"0\">\n      <thead>{renderHeaderRow(state)}</thead>\n      <tbody>{renderRows(dispatch)}</tbody>\n    </table>\n  );\n};\n\nexport default Index;\n","import React, { useState } from \"react\";\n\nimport \"./index.css\";\n\nconst ToDoList = () => {\n  const [list, setList] = useState([]);\n\n  const handleKeyDown = (event) => {\n    if (event.key === \"Enter\") {\n      setList([\n        ...list,\n        {\n          description: event.target.value,\n          isDone: false,\n          _id: new Date().valueOf(),\n        },\n      ]);\n      event.target.value = \"\";\n    }\n  };\n\n  const handleClickIsDone = (taskToChange) => {\n    const listModified = list.map((task) =>\n      taskToChange._id === task._id ? { ...task, isDone: !task.isDone } : task\n    );\n    setList(listModified);\n  };\n\n  const handleClickRemove = (taskToRemove) => {\n    const listModified = list.filter((task) => taskToRemove._id !== task._id);\n    setList(listModified);\n  };\n\n  const List = () => (\n    <ul className=\"list\">\n      {list.map((task) => (\n        <li className=\"to-do\" key={task._id}>\n          <p\n            style={{\n              textDecorationLine: task.isDone ? \"line-through\" : null,\n            }}\n          >\n            {task.description}\n          </p>\n          <div className=\"clickable\">\n            <input\n              type=\"radio\"\n              onChange={() => handleClickIsDone(task)}\n              checked={task.isDone}\n            />\n            <b onClick={() => handleClickRemove(task)}>X</b>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <div className=\"container\">\n      <input\n        placeholder=\"Add TO DO\"\n        className=\"to-do-input\"\n        onKeyDown={handleKeyDown}\n      />\n      <List list={list} />\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Calculator, ToDoList, Home } from \"./components\";\n\nfunction Routes() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <navbar>\n          <Link to=\"/\">Home</Link>\n        </navbar>\n        <Switch>\n          <Route path=\"/to-do\">\n            <ToDoList />\n          </Route>\n          <Route path=\"/calculator\">\n            <Calculator />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default Routes;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}